name: Scheduled DVC Download Link Check

on:
  workflow_call:
    inputs:
      lychee_args:
        description: The args to provide to lychee-action
        required: true
        type: string
      owner:
        description: The owner of repository to operate on if the event doesn't include it
        required: false
        type: string
        default: "${{ github.event.repository.owner.login }}"
      repo:
        description: The repository to operate on if the event doesn't include it
        required: false
        type: string
        default: "${{ github.event.repository.name }}"
      tag:
        description: The tag that will be used to identify existing link-check reports to edit
        required: false
        type: string
        default: link-check
      tags:
        description: The tags that will be assigned to issues created by this workflow
        required: false
        type: string
        default: link-check
      title:
        description: The title of the issue created by this workflow
        required: false
        type: string
        default: "Download Link Checker Report"
jobs:
  check_links_and_make_issue:
    name: Check Download Links and Raise Issue
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Dummy Run Lychee
        run: |
          mkdir ./lychee
          echo "## This is a test failure for an update of link-check!" > ./lychee/out.md

      - name: Find latest open Link Check issue
        uses: actions/github-script@v6
        id: set-result
        env:
          OWNER: ${{ inputs.owner }}
          REPO: ${{ inputs.repo }}
          TITLE: ${{ inputs.title }}
        with:
          script: |
            const { OWNER, REPO, TAG } = process.env
            const options = {
              owner: OWNER,
              repo: REPO,
              labels: TAG,
              state: "open",
              creator: "github-actions[bot]",
              sort: "created"
            }
            const issues = await github.rest.issues.listForRepo(options)
            if(issues && issues.data && issues.data[0]) {
              return issues.data[0].number
            }

      - name: Create or Update Issue
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: ${{ inputs.title }}
          content-filepath: ./lychee/out.md
          labels: website, link-checker
          issue-number: ${{ steps.set-result.outputs.result }}
